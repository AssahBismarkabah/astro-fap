---
const docs = await Astro.glob('../pages/docs/**/*.md');

// Group docs by category (first level directory)
const groupedDocs = docs.reduce((acc, doc) => {
  const category = doc.url.split('/')[2]; // Get the category from URL
  if (!acc[category]) {
    acc[category] = [];
  }
  acc[category].push(doc);
  return acc;
}, {});
---

<nav class="fixed w-64 h-full bg-gray-100 dark:bg-gray-900 p-4 border-r border-gray-200 dark:border-gray-800 flex flex-col">
  <div class="mb-8 flex items-center gap-4">
    <img
    src={`${import.meta.env.BASE_URL}image.png`}
      alt="Profile"
      class="w-12 h-12 rounded-full border-2 border-green-300"
    />
    <div>
      <h1 class="text-xl font-bold text-green-600 dark:text-green-300"></h1>
      <p class="text-sm text-gray-600 dark:text-green-400">writing</p>
    </div>
  </div>

  <div class="mb-4 relative">
    <input
      type="text"
      placeholder="Search docs..."
      class="w-full px-4 py-2 bg-gray-200 dark:bg-gray-800 text-gray-900 dark:text-gray-100 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-300 transition-colors duration-200"
      id="searchInput"
    />
    <svg class="w-5 h-5 absolute right-3 top-2.5 text-gray-500 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
    </svg>
  </div>
  
  <div class="overflow-y-auto flex-grow pr-2 custom-scrollbar">
    <ul class="space-y-4" id="docsList">
      {Object.entries(groupedDocs).map(([category, docs]) => (
        <li>
          <h2 class="text-lg font-semibold mb-2 text-green-600 dark:text-green-300 pl-4">{category}</h2>
          <ul class="space-y-1">
            {docs.map(doc => (
              <li>
                <a
                  href={doc.url}
                  class="block px-4 py-2 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-800 hover:text-green-600 dark:hover:text-green-300 transition-colors"
                >
                  {doc.frontmatter.title}
                </a>
              </li>
            ))}
          </ul>
        </li>
      ))}
    </ul>
  </div>

  <button
    id="themeToggle"
    class="mt-4 px-4 py-2 bg-gray-200 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-300 dark:hover:bg-gray-700 transition-colors flex items-center justify-center gap-2"
  >
    <svg class="w-5 h-5 dark:hidden" fill="currentColor" viewBox="0 0 20 20">
      <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" />
    </svg>
    <svg class="w-5 h-5 hidden dark:block" fill="currentColor" viewBox="0 0 20 20">
      <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" />
    </svg>
    <span class="dark:hidden">Light</span>
    <span class="hidden dark:block">Dark</span>
  </button>
</nav>

<style>
  .custom-scrollbar {
    scrollbar-width: thin;
    scrollbar-color: #6B7280 #E5E7EB;
  }

  .dark .custom-scrollbar {
    scrollbar-color: #4B5563 #1F2937;
  }

  .custom-scrollbar::-webkit-scrollbar {
    width: 8px;
  }

  .custom-scrollbar::-webkit-scrollbar-track {
    background: #E5E7EB;
    border-radius: 4px;
  }

  .dark .custom-scrollbar::-webkit-scrollbar-track {
    background: #1F2937;
  }

  .custom-scrollbar::-webkit-scrollbar-thumb {
    background-color: #6B7280;
    border-radius: 4px;
    border: 2px solid #E5E7EB;
  }

  .dark .custom-scrollbar::-webkit-scrollbar-thumb {
    background-color: #4B5563;
    border: 2px solid #1F2937;
  }

  .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background-color: #4B5563;
  }

  .dark .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background-color: #6B7280;
  }
</style>

<script>
  // Theme toggle functionality
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    return 'light';
  })();

  if (theme === 'light') {
    document.documentElement.classList.remove('dark');
  } else {
    document.documentElement.classList.add('dark');
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle('dark');

    const isDark = element.classList.contains('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
  };

  document.getElementById('themeToggle')?.addEventListener('click', handleToggleClick);

  // Search functionality
  const searchInput = document.getElementById('searchInput');
  const docsList = document.getElementById('docsList');
  const items = docsList?.getElementsByTagName('li');

  searchInput?.addEventListener('input', (e) => {
    const searchTerm = (e.target as HTMLInputElement).value.toLowerCase();
    
    if (items) {
      Array.from(items).forEach((item) => {
        const text = item.textContent?.toLowerCase() || '';
        if (item.querySelector('h2')) {
          // This is a category header, don't hide it
          return;
        }
        item.style.display = text.includes(searchTerm) ? '' : 'none';
      });
    }
  });
</script>